pipeline:
  name: drone-with-go
  identifier: drone_with_go
  projectIdentifier: drone_with_go
  orgIdentifier: jimexample
  properties:
    ci:
      codebase:
        build: <+input>
        connectorRef: account.Jim_Sheldon_GitHub
        repoName: jimsheldon-sandbox/drone-with-go
  stages:
    - stage:
        variables:
          - name: CI
            type: String
            description: ""
            required: false
            value: "true"
          - name: CI_COMMIT_BRANCH
            type: String
            description: ""
            required: false
            value: <+codebase.branch>
          - name: DRONE
            type: String
            description: ""
            required: false
            value: "true"
          - name: DRONE_REPO_NAME
            type: String
            description: ""
            required: false
            value: <+codebase.repoUrl.split('/')[4]>
        identifier: default
        name: default
        spec:
          cloneCodebase: true
          execution:
            steps:
              - step:
                  identifier: test
                  name: test
                  spec:
                    command: |
                      env
                      echo ${DRONE_COMMIT_SHA:0:8}
                      echo <+codebase.commitSha.substring(0,8)>
                      echo <+codebase.repoUrl.split('/')[4]>
                      echo ${DRONE_TAG##v}
                      echo <+trigger.payload.ref.split('/')[2]>
                      echo <+<+trigger.payload.ref.split('/')[2]>.substring(<+trigger.payload.ref.split('/')[2]>.indexOf('v') + 1)>
                    envVariables:
                      MYVAR: $DRONE
                      DRONE_TAG: v1.2.3
                    imagePullPolicy: IfNotPresent
                    shell: Bash
                  timeout: ""
                  type: Run
          platform:
            arch: Amd64
            os: Linux
          runtime:
            spec: {}
            type: Cloud
        type: CI
        when:
          condition: <+trigger.payload.ref> =^ "refs/tags/"
          pipelineStatus: Success
